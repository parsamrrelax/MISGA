name: Build Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Cache Kotlin Compile
        uses: actions/cache@v4
        with:
          path: |
            build
            app/build
          key: ${{ runner.os }}-kotlin-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-kotlin-
            
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ENCODED_STRING" ]; then
            echo "Decoding keystore..."
            echo "$ENCODED_STRING" | tr -d '\n\r\t ' | base64 -d > app/keystore.jks
            if [ $? -eq 0 ]; then
              echo "Keystore decoded successfully"
            else
              echo "Failed to decode keystore - using unsigned build"
            fi
          else
            echo "No keystore secret found, using unsigned build"
          fi
          
      - name: Build Release APK
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_FILE: keystore.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          ./gradlew assembleCoreRelease --stacktrace
          
      - name: Get APK info
        id: apk_info
        run: |
          APK_PATH=$(find app/build/outputs/apk/core/release -name "*.apk" | head -1)
          APK_NAME=$(basename "$APK_PATH")
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "apk_name=$APK_NAME" >> $GITHUB_OUTPUT
          
      - name: Get app version
        id: app_version
        run: |
          VERSION_NAME=$(grep '^VERSION_NAME=' gradle.properties | cut -d'=' -f2)
          echo "version=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "App version: $VERSION_NAME"
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: messages-release-apk
          path: ${{ steps.apk_info.outputs.apk_path }}
          retention-days: 30
          
      - name: Upload mapping files
        uses: actions/upload-artifact@v4
        with:
          name: messages-mapping
          path: app/build/outputs/mapping/coreRelease/mapping.txt
          retention-days: 90
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.app_version.outputs.version }}
          name: Release v${{ steps.app_version.outputs.version }}
          body: |
            Release version ${{ steps.app_version.outputs.version }}
            
            Build from commit ${{ github.sha }}
            Build number: ${{ github.run_number }}
          files: ${{ steps.apk_info.outputs.apk_path }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
